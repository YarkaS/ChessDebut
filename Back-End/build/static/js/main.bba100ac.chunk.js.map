{"version":3,"sources":["Imgs/Alekhine.jpeg","Imgs/Amar.jpeg","Imgs/Benoni.jpeg","Imgs/BirdsOpening.jpeg","Imgs/Caro-Kann.jpeg","Imgs/Catalan.jpeg","Imgs/Dutch.jpeg","Imgs/English.jpeg","Imgs/FourKnights.jpeg","Home.js","fake_api/QuizQuestions.js","Question.js","QuestionCount.js","AnswerOption.js","Quiz.js","Result.js","Play.js","Dictionary.js","Board.js","Main.js","index.js"],"names":["Home","Component","quizQuestions","question","answers","type","content","Question","props","className","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","questionId","questionTotal","answerOptions","map","key","Result","quizResult","Play","state","answersCount","result","handleAnswerSelected","bind","shuffledAnswerOptions","shuffleArray","this","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","max","apply","filter","renderResult","renderQuiz","Dictionary","href","Container","fluid","Row","Col","src","require","default","Board","Main","exact","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bba100ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Alekhine.3e2561b1.jpeg\";","export default __webpack_public_path__ + \"static/media/Amar.0e9de15a.jpeg\";","export default __webpack_public_path__ + \"static/media/Benoni.0c816805.jpeg\";","export default __webpack_public_path__ + \"static/media/BirdsOpening.226c3aca.jpeg\";","export default __webpack_public_path__ + \"static/media/Caro-Kann.e0bf0de3.jpeg\";","export default __webpack_public_path__ + \"static/media/Catalan.f63ecffd.jpeg\";","export default __webpack_public_path__ + \"static/media/Dutch.d85d8afb.jpeg\";","export default __webpack_public_path__ + \"static/media/English.d38b7a4e.jpeg\";","export default __webpack_public_path__ + \"static/media/FourKnights.df838e0c.jpeg\";","import React, { Component } from \"react\";\n \nclass Home extends Component {\n  render() {\n    return (\n      <div>\n      \n        <p>\"Every chess master was once a beginner.\" - Irving Chernev</p>\n      </div>\n    );\n  }\n}\n\n\nexport default Home;\n","var quizQuestions = [\n  {\n      question: \"Given the Polish Opening, what is the correct move order?\",\n      answers: [\n          {\n              type: \"correct\",\n              content: \"1.b4\"\n          },\n          {\n              type: \"incorrect\",\n              content: \"1.d4 f5\"\n          }\n      ]\n  },\n  {\n      question: \"You want to play the Nimzovich-Larsen Attack. What is the first move for White?\",\n      answers: [\n          {\n              type: \"correct\",\n              content: \"1.b3\"\n          },\n          {\n              type: \"incorrect\",\n              content: \"1.d4\"\n          }\n      ]\n  },\n  {\n      question: \"What is this opening: 1.e4 e5 2.Nf3 Nc6 3.Nc3 Nf6?\",\n      answers: [\n          {\n              type: \"correct\",\n              content: \"Four Knights\"\n          },\n          {\n              type: \"incorrect\",\n              content: \"Queen's Gambit\"\n          }\n      ]\n  },\n  {\n      question: \"Given the Catalan Opening, what is the correct move order?\",\n      answers: [\n          {\n              type: \"correct\",\n              content: \"1.d4 Nf6 2.c4 e6 3.g3\"\n          },\n          {\n              type: \"incorrect\",\n              content: \"1.e4 e5 2.Nf3 Nc6 \"\n          }\n      ]\n  },\n  {\n      question: \"You want to play the Bird's Opening. What is the first move for White?\",\n      answers: [\n          {\n              type: \"correct\",\n              content: \"1.f4\"\n          },\n          {\n              type: \"incorrect\",\n              content: \"1.e4\"\n          }\n      ]\n  }\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return (\n    <h2 className=\"question\">{props.content}</h2>\n  );\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\n\nfunction Result(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        You are mainly <strong>{props.quizResult}</strong>!\n      </div>\n    </CSSTransitionGroup>\n    );\n  }\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired,\n};\n\nexport default Result;\n","import React, { Component } from \"react\";\nimport quizQuestions from './fake_api/QuizQuestions';\nimport Quiz from './Quiz'; \nimport Result from './Result';\n\nimport './index.css';\n\n\nclass Play extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n  \n  \n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));  \n\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n  \n  shuffleArray(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n    // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n  \n    handleAnswerSelected(event) {\n      this.setUserAnswer(event.currentTarget.value);\n\n      if (this.state.questionId < quizQuestions.length) {\n        setTimeout(() => this.setNextQuestion(), 300);\n      } else {\n        setTimeout(() => this.setResults(this.getResults()), 300);\n      }\n  }\n  \n  \n  setUserAnswer(answer) {\n    this.setState((state) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n  \n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: 'Undetermined' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n  \n  render() {\n    return (\n      <div className = \"Play\">\n        <div className = \"Play-header\">\n         \n          \n          \n        </div>\n        \n          {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n      \n    );\n  }\n}\n \nexport default Play;\n","import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nclass Dictionary extends Component {\n  render() {\n    return (\n      <div>\n        <h2>The dictionary</h2>\n        <p>\n          List of chess{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/List_of_chess_openings\">\n            openings\n          </a>\n          .\n        </p>\n        <Container fluid>\n          <Row className = \"Row\">\n            <Col className = \"cols\">\n              <h1>Alekhine's Defense</h1>\n              <img src={require(\"./Imgs/Alekhine.jpeg\").default} />\n            </Col>\n            <Col>\n              <h1>Amar Opening</h1>\n              <img src={require(\"./Imgs/Amar.jpeg\").default} />\n            </Col>\n            <Col>\n              <h1>Benoni Opening</h1>\n              <img src={require(\"./Imgs/Benoni.jpeg\").default} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <h1>Bird's Opening</h1>\n              <img src={require(\"./Imgs/BirdsOpening.jpeg\").default} />\n            </Col>\n            <Col>\n              <h1>Caro-Kann Defense</h1>\n              <img src={require(\"./Imgs/Caro-Kann.jpeg\").default} />\n            </Col>\n            <Col>\n              <h1>Catalan Opening</h1>\n              <img src={require(\"./Imgs/Catalan.jpeg\").default} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <h1>Dutch Defense</h1>\n              <img src={require(\"./Imgs/Dutch.jpeg\").default} />\n            </Col>\n            <Col>\n              <h1>English Opening</h1>\n              <img src={require(\"./Imgs/English.jpeg\").default} />\n            </Col>\n            <Col>\n              <h1>Four Knights System</h1>\n              <img src={require(\"./Imgs/FourKnights.jpeg\").default} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Dictionary;\n","import React, { Component } from \"react\";\n \nclass Board extends Component {\n  render() {\n    return (\n      <div>\n      \n        <p>\"The place for a board or a game.\" </p>\n      </div>\n    );\n  }\n}\n\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Play from \"./Play\";\nimport Dictionary from \"./Dictionary\"; \nimport Board from \"./Board\";\nclass Main extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          \n          <ul className=\"header\">\n            <li><NavLink exact to=\"/\">Home</NavLink></li>\n            <li><NavLink to=\"/play\">Short Quiz</NavLink></li>\n            <li><NavLink to=\"/dictionary\">Dictionary</NavLink></li>\n            <li><NavLink to=\"/board\">Chess Board</NavLink></li>\n            \n          </ul>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/play\" component={Play}/>\n            <Route path=\"/Dictionary\" component={Dictionary}/>\n            <Route path=\"/Board\" component={Board}/>              \n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"assets/scss/material-kit-react.scss?v=1.9.0\";\n\n\nimport Main from \"./Main\";\n//import \"./index.css\"; \nReactDOM.render(\n  <Main/>, \n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}